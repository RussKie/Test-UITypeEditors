<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABo
        DQAAAk1TRnQBSQFMAgEBAwEAAQgBAAEIAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEP8AIwACEwEUARoCMwFOAWwCLwFvAaYCJQF+AcQCJQF+AcQCLwFvAaYCMwFO
        AWwCEwEUARrcAAIsAToBTQIrAX8BvwI0AawB4wJIAdQB9QJTAekB/QJTAekB/QJIAdQB9QI0AawB4wIr
        AX8BvwIsAToBTSAAASsBMgEqAUgBIwFeASEBzAEkASgBJAE4LAABIgElASgBNQEzAUoBYAGTASoBTQFx
        AbkBJQFNAXUBxQEmAU0BdQHEAS8BTQFsAasBNAFIAVwBjAEwATkBQgFcARUBFgEXAR5YAAIsATkBTAIp
        AYkBzAJKAdgB9gKDAeoB/wK9AeIB/wLWAd4B/wLWAd4B/wK9AeIB/wKDAeoB/wJKAdgB9gIpAYkBzAIs
        ATkBTBgAASsBNAEqAUgBJgFqASEBzAEjAZoBGQHoASoBawEmAcQBHAEfARwBKSgAAS4BTwFyAa4BXwGO
        AbUB4QGIAbkB3wH2AZgBzAHxAf8BkgHEAesB/AGBAbIB1wHyAWUBlQG7AeUBRgFyAZkB0QEtAVQBegG7
        ATQBSgFfAYkBHgEhASMBLUwAAhIBFAEZAi4BggG3AlAB2QH0AqEB5wH/AsgB4QH/AoMB6wH/AmQB8AH/
        AmQB8AH/AoMB6wH/AsgB4QH/AqEB5wH/AlAB2QH0Ai4BggG3AhIBFAEZEAABKwE1ASoBSAEoAXUBIQHM
        AS4BuAEhAfQBIwHNARIB/wElAawBGAHvAS8BbwEpAbsBFAEVARQBGyQAAS8BUAFyAasBkAHBAeUB+AGO
        AcEB7QH/AY4BwQHsAf8BkgHFAe8B/wGWAckB8QH/AZMBxgHvAf8BlAHHAfAB/wGTAcUB6gH6AVkBiAGu
        AdcBMwFYAXsBrwEwAToBQwFZSAACMgFNAWMCPQGyAdkCiAHtAf8CyQHiAf8CaQHxAf8CaQHxAf8CkQHr
        Af8CkQHrAf8CaQHxAf8CaQHxAf8CyQHiAf8CiAHtAf8CPQGyAdkCMgFNAWMMAAErATUBKgFIASkBeAEh
        AcwBRQHDATUB9gEoAcMBFwH/ATgBzAEnAf8BJwHCARYB/wEpAZ8BHAHqATMBbAEtAa4BDAENAQwBECAA
        ATQBRQFVAXoBQgFtAZMBzAGXAcgB7wH9AZEBxAHuAf8BgQGyAdgB8QF3AaYBzQHsAX4BrwHWAfEBkAHD
        Ae4B/wGLAb4B6wH/AZABwwHuAf8BigG7AeAB9AE3AVsBfgGuASQBKAEsATlEAAIzAXYBlgJaAd0B8ALF
        AekB/wKKAfAB/wJtAfQB/wLRAecB/wK4AeoB/wK4AeoB/wLRAecB/wJtAfQB/wKKAfAB/wLFAekB/wJa
        Ad0B8AIzAXYBlggAASsBNgEqAUgBKgF8ASEBzAFfAdQBTwH5ATIBvAEhAf8BUQHKAUEB+AEqAXwBIQHM
        AS8BqwEhAfMBKwG4ARoB/wErAZUBHwHkATYBZwExAZ4DBgEIHAADBgEIATUBSQFeAYsBRAFvAZYB0QGd
        AdAB9QH/ATIBWAF9AbwEAAExAVYBfAG8AZMBxgHvAf8BiQG8AekB/wGTAaIBrQH/AZ4BagE3Af8BbQGA
        AY4B4QE1AU0BZQGJRAACLgGLAa4CbAHyAfwC5QHtAf8CbgH2Af8CmwHzAf8CvwHwAf8CZAH2Af8CZAH2
        Af8CvwHwAf8CmwHzAf8CbgH2Af8C5QHtAf8CbAHyAfwCLgGLAa4IAAErAX8BIQHMAWwB4AFbAfoBWAHQ
        AUcB/wFoAd0BVwH8ASsBfwEhAcwBNgFOATMBbQEtAYEBJAHLATcBsAEmAfgBMQGyASAB/wEuAZABIQHf
        ATgBYAEzAYwDAQECDAABJgEpAS0BPAEvAU4BbgGsAS8BTQFsAaoBMwE/AUwBawEmASkBLQE8ASoBTwF2
        Ab0BlwHKAfIB/wFUAYIBqwHgASwBVQF+AcoBUQF/AakB4AGLAb4B6gH/AYYBuQHnAf8BuAGFAVEB/wG+
        AYsBVwH/AagBdAFBAf8BTQFeAXABvkQAAi8BjAGrAnMB9AH8Au0B9AH/AnIB+AH/AqAB9wH/AsYB9gH/
        AmgB+AH/AmgB+AH/AsYB9gH/AqAB9wH/AnIB+AH/Au0B9AH/AnMB9AH8Ai8BjAGrCAABLAE2ASoBSAEs
        AYIBIQHMAXIB6AFhAf0BLAGCASEBzAEsATYBKgFIBAABLQE5ASwBTAEuAYkBIwHTAT0BswEtAfsBNwGu
        ASYB/gExAY8BJAHaATgBVwE0AXsMAAEzAU8BagGYAWoBmQG/AeMBiQG7AeQB+AFZAYUBrAHZATUBWAF7
        AbABTwF6AaABzgGPAcEB7QH/AYkBvAHpAf8BjgHBAe0B/wGJAbwB6QH/AYMBtgHlAf8BgwG2AeUB/wHO
        AZsBZwH/AfcBxAGRAf8B9gHDAZAB/wG1AYIBTgH/RAACNAF4AY8CbAHkAe8C2QH7Af8CmAH6Af8CeQH6
        Af8C5gH8Af8CzAH7Af8CzAH7Af8C5gH8Af8CeQH6Af8CmAH6Af8C2QH7Af8CbAHkAe8CNAF4AY8MAAEs
        ATcBKgFIASwBhQEhAcwBLAE3ASoBSAwAATYBTQEyAWkBNAGVASgB2AFXAc4BRgH+AVQBywFEAf0BMwGS
        AScB1gE0AUkBMgFjCAABNAFPAWsBjQGPAcIB7AH8AYABswHkAf8BhwG6AegB/wGOAcEB7QH/AYwBvwHs
        Af8BgAGzAeQB/wGAAbMB5AH/AYABswHkAf8BgAGzAeQB/wGAAbMB5AH/AYABswHkAf8BoAGvAb0B/wHZ
        AaYBcgH/AdMBoAFsAf8BVQFlAXUBtEQAAjABTQFcAk8BvwHSAqQB/QH/AucC/wJ8AfwB/wJ8AfwB/wKp
        Af4B/wKpAf4B/wJ8AfwB/wJ8AfwB/wLnAv8CpAH9Af8CTwG/AdICMAFNAVwnAAEBATkBYAE0AYUBPQGj
        AS8B3gFgAdgBTwH/AVsB0AFMAfoBMgGQASYB0gEuAToBLAFMBAABNQFMAWIBgAFhAY0BtgHSAYoBvQHq
        Af8BfQGxAeIB/wF9AbEB4gH/AVsBfAHTAf8CFQGvAf8BWAF5AdAB/wF9AbEB4gH/AX0BsQHiAf8BWgGm
        AcwB/wEUAYwBnQH/AVgBowHJAf8BfgGyAeMB/wFuAZwBxAHeATQBSAFcAXdEAAIQARIBFgI1AY4BpAJ5
        AegB8ALBAv8C6AL/Ap4B/QH/AnwB/QH/AnwB/QH/Ap4B/QH/AugC/wLBAv8CeQHoAfACNQGOAaQCEAES
        ARYoAAMEAQYBOAFwATEBngFJAbMBOwHlAWoB4gFZAf8BbgHkAV8B+wEuAYkBIQHMBAABFwEYARoBIAE2
        AVEBawGLAVsBhgGrAckBjgHAAewB/QF9AbEB4gH/Ai8ByQH/AjkBzAH/Ah8BuQH/AVkBewHRAf8BegGu
        AeAB/wEoAaABsQH/ATQBqQG6Af8BGwGTAaQB/wFkAa8B0gH/AUkBcAGUAbUBLAE1AT0BTUgAAicBNgFA
        AjgBnQGxAn0B6AHvAqgC/wLeAv8C+AL/AvgC/wLeAv8CqAL/An0B6AHvAjgBnQGxAicBNgFAMAABDAEN
        AQwBEAE2AXwBLAGwAXYB7gFlAf8BLgGNASEBzAEsATcBKgFICAABEwEUARUBGgE1AUgBXAF2AT8BYgGC
        AaMBbQGcAcQB3AJFAd8B/wJ9AfkB/wJ7AfgB/wIsAcYB/wF4AawB3wH/ATgBsAHBAf8BewHlAfYB/wF6
        AeQB9QH/ASYBngGvAf8BNQFPAWkBhwELAgwBD0wAAicBNgFAAjYBjwGjAlUBwAHQAnwB5wHuAowB+QH7
        AowB+QH7AnwB5wHuAlUBwAHQAjYBjwGjAicBNgFAOAABFgEZARYBHwEvAY4BIQHMASwBOAEqAUgQAAMC
        AQMBJwEsATIBPgE1AUwBZAF/AT8BWgGXAbcCUAHqAf8CSgHkAf8BcAGRAeEB+gGGAbkB5QH6AWoBsgHU
        AfMBQAG4AckB/wE8AbQBxQH/ATkBaAGFAawBGAEaARsBIlQAAhABEgEWAjABTQFbAjQBeAGLAjABjgGk
        AjABjgGkAjQBeAGLAjABTQFbAhABEgEWYAADAwEEAR8BIwEmAS8BMQE9AUkBWwE1AUsBYAF6ATUBUQFs
        AYoBNQFRAW0BiwE1AUwBYwF+ATQBRgFXAW4BKgExATgBRgIIAQkBC/8ASQABQgFNAT4HAAE+AwABKAMA
        AUADAAEQAwABAQEAAQEFAAGAFwAD/wEABv8CAAHwAQ8E/wIAAeABBwH4Af8B4AEPAgABwAEDAfABfwHg
        AQMCAAGAAQEB4AE/AeABAQIAAYABAQHAAR8B4AMAAYABAQGAAQ8B4AGAAgABgAEBAYABBwQAAYABAQGC
        AQcEAAGAAQEBxwEDBAABgAEBAf8BAQQAAYABAQH/AYEEAAHAAQMB/wHBAYADAAHgAQcB/wHjAcABAQIA
        AfABDwL/AfABAwIABv8CAAs=
</value>
  </data>
</root>